/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface MocoButton {
        /**
          * button text
         */
        "caption": string;
        /**
          * style of the button (dark) or not
         */
        "dark": boolean;
        /**
          * button disabled or not
         */
        "disabled": boolean;
    }
    interface MocoInputText {
        /**
          * style of the button (dark) or not
         */
        "dark": boolean;
        /**
          * is error or not
         */
        "error": boolean;
        /**
          * field label text
         */
        "label": string;
        /**
          * placeholder text
         */
        "placeholder": string;
        /**
          * value of the input field,  updated on input change
         */
        "value": string;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
}
declare global {
    interface HTMLMocoButtonElement extends Components.MocoButton, HTMLStencilElement {
    }
    var HTMLMocoButtonElement: {
        prototype: HTMLMocoButtonElement;
        new (): HTMLMocoButtonElement;
    };
    interface HTMLMocoInputTextElement extends Components.MocoInputText, HTMLStencilElement {
    }
    var HTMLMocoInputTextElement: {
        prototype: HTMLMocoInputTextElement;
        new (): HTMLMocoInputTextElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLElementTagNameMap {
        "moco-button": HTMLMocoButtonElement;
        "moco-input-text": HTMLMocoInputTextElement;
        "my-component": HTMLMyComponentElement;
    }
}
declare namespace LocalJSX {
    interface MocoButton {
        /**
          * button text
         */
        "caption"?: string;
        /**
          * style of the button (dark) or not
         */
        "dark"?: boolean;
        /**
          * button disabled or not
         */
        "disabled"?: boolean;
        /**
          * event emitted on every button click, emitting the caption text of the button
         */
        "onClicked"?: (event: CustomEvent<string>) => void;
    }
    interface MocoInputText {
        /**
          * style of the button (dark) or not
         */
        "dark"?: boolean;
        /**
          * is error or not
         */
        "error"?: boolean;
        /**
          * field label text
         */
        "label"?: string;
        /**
          * emits the value of input plus updates the value of the component
         */
        "onInputchange"?: (event: CustomEvent<string>) => void;
        /**
          * placeholder text
         */
        "placeholder"?: string;
        /**
          * value of the input field,  updated on input change
         */
        "value"?: string;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface IntrinsicElements {
        "moco-button": MocoButton;
        "moco-input-text": MocoInputText;
        "my-component": MyComponent;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "moco-button": LocalJSX.MocoButton & JSXBase.HTMLAttributes<HTMLMocoButtonElement>;
            "moco-input-text": LocalJSX.MocoInputText & JSXBase.HTMLAttributes<HTMLMocoInputTextElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
        }
    }
}
