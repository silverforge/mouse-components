@use 'sass:math';
@import '../../scss/defaults';
@import '../../scss/variables';
@import '../../scss/shadows';
@import '../../scss/after-label';

input[type="number"] {
  -moz-appearance: textfield;
}

input[type="date"]::-webkit-inner-spin-button,
input[type="date"]::-webkit-calendar-picker-indicator {
  display: none;
  appearance: none;
  -webkit-appearance: none;
  margin: 0;
}

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  appearance: none;
  -webkit-appearance: none;
}

input::-ms-reveal,
input::-ms-clear {
  display: none;
}

:host([dark]) {
  ::slotted(svg) {
    fill: $color-svg-dark;
  }

  .moco-input-box {
    border: 1px solid $color-border-dark;
    background-color: $color-background-dark;
    color: $color-text-dark;

    &:focus,
    &:focus-within {
      border: 1px solid $color-border-dark-focused;
      background-color: $color-background-dark-focused;
      @include shadow-sm;
    }
  }

  .input-end-box {
    & svg {
      fill: $color-svg-dark;
    }
  }

  .carousel-icons {
    & svg {
      fill: $color-svg-dark;
    }
  }
}

:host([disabled]) {
  ::slotted(svg) {
    fill: $color-text-disabled;
  }

  ::slotted(*) {
    color: $color-text-disabled;
  }

  .moco-input-box {
    border: 1px solid $color-background-disabled;
    background-color: $color-background-disabled;
    color: $color-text-disabled;

    &:focus,
    &:focus-within {
      color: $color-text-disabled;
      border: 1px solid $color-background-disabled;
      background-color: $color-background-disabled;
      box-shadow: 0 0 0 transparent;
    }

    & > input {
      color: $color-text-disabled;

      &::placeholder {
        color: $color-text-disabled;
      }
    }
  }

  .input-end-box {
    & svg {
      fill: $color-text-disabled;
    }
  }

  .carousel-icons {
    & svg {
      fill: $color-text-disabled;
    }
  }
}

:host([error]) {
  .moco-input-box {
    border: 1px solid $color-error;
  }
}

::slotted(*) {
  color: $color-text-placeholder;
  padding-left: 0.5rem;
  margin-right: -0.5rem;
}

::slotted(svg) {
  fill: $color-svg-light;
  width: $default-svg-size;
  height: $default-svg-size;
}

.moco-input-box {
  display: flex;
  align-items: center;

  font-family: inherit;
  letter-spacing: 1px;
  position: relative;
  height: $default-control-height;

  border: 1px solid $color-border-light;
  border-radius: $default-border-radius;
  background-color: $color-background-light;
  color: $color-text-light;

  transition: all 0.3s;
  overflow: hidden;

  &::placeholder {
    color: $color-text-placeholder;
  }

  &:focus,
  &:focus-within {
    border: 1px solid $color-border-light-focused;
    background-color: $color-background-light-focused;
    @include shadow-sm;
  }

  & > input {
    outline: none;
    border: none;

    background-color: transparent;
    -webkit-appearance: textfield;
    appearance: textfield;

    padding: 1rem;
    width: 100%;
    height: 100%;

    font-family: inherit;
    font-size: 1rem;
    letter-spacing: 1px;
    color: inherit;

    &::placeholder {
      color: $color-text-placeholder;
    }
  }
}

.input-end-box {
  background-color: transparent;
  display: flex;
  flex-direction: column;
  width: 2.4rem;
  height: 100%;
  align-items: center;
  justify-content: center;

  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;

  outline: none;

  & svg {
    fill: $color-svg-light;
    min-width: 100%;
    min-height: $default-svg-size;
    width: 100%;
    height: $default-svg-size;

    cursor: pointer;
    outline: none;
  }
}

.icon-box {
  display: flex;
  align-items: center;
  justify-content: center;

  width: 2.4rem;
  height: $default-control-height;
}

.carousel-icons {
  display: flex;
  flex-direction: column;
  transition: all 0.3s ease-out;
  height: calc(2 * $default-control-height);

  & svg {
    fill: $color-background-dark-focused;
    width: $default-svg-size;
    height: $default-svg-size;
  }

  &-up {
    @extend .carousel-icons;
    margin-top: $default-control-height;
  }

  &-down {
    @extend .carousel-icons;
    margin-top: calc(-1 * $default-control-height);
  }
}
