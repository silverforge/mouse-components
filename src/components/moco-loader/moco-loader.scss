@use "sass:math";
@import '../../scss/defaults';
@import '../../scss/variables';
@import '../../scss/shadows';

$dot-size: 2em;
$container-size: 20em;
$container-inner-size: 100%;
$container-inner-small-size: 15em;
$radius-big: -8em;
$radius-small: -6em;

@mixin childrenToCircle($childCount) {
  $degree: math.div(360, $childCount);

  & > * {
    @for $i from 1 to $childCount + 1 {
      &:nth-child(#{$i}) {
        @extend .dot-base;
        transform: rotate(($i * $degree) + 0deg) translateY($radius-big);
      }
    }
  }
}

.container {
  position: relative;
  min-width: $container-size;
  min-height: $container-size;
  width: $container-size;
  height: $container-size;
  border-radius: $default-border-radius;
  background-color: $color-background-light;
  @include shadow-md;

  transition: all .3s;
  transition-delay: 2s;

  &:hover {
    transform: scale(1.05);
  }
}

.container-inner {
  position: absolute;
  width: $container-inner-size;
  height: $container-inner-size;
  background-color: transparent;
  animation: rotate 24s linear infinite;

  @include childrenToCircle(12);
}

.container-inner-small {
  display: block;
  position: absolute;

  top: calc(math.div($container-size, 2) - math.div($container-inner-small-size, 2));
  left: calc(math.div($container-size, 2) - math.div($container-inner-small-size, 2));

  width: $container-inner-small-size;
  height: $container-inner-small-size;
  background-color: transparent;
  animation: rotate-back 6s linear infinite;
}

.dot-base {
  min-width: $dot-size;
  min-height: $dot-size;
  width: $dot-size;
  height: $dot-size;
  background-color: $color-background-dark;
  border-radius: 50%;

  position: absolute;
  top: calc(math.div($container-size, 2) - math.div($dot-size, 2));
  left: calc(math.div($container-size, 2) - math.div($dot-size, 2));
}

.dot-small {
  min-width: math.div($dot-size, 2);
  min-height: math.div($dot-size, 2);
  width: math.div($dot-size, 2);
  height: math.div($dot-size, 2);
  background-color: $color-background-dark-focused;
  border-radius: 50%;

  position: absolute;
  top: calc(math.div($container-inner-small-size, 2) - math.div($dot-size, 4));
  left: calc(math.div($container-inner-small-size, 2) - math.div($dot-size, 4));
  transform: translateY($radius-small);
}

@keyframes rotate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes rotate-back {
  0% {
    transform: rotate(360deg);
  }
  100% {
    transform: rotate(0deg);
  }
}
